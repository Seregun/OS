#include <iostream>
#include <windows.h>
#include <string>

int main() {
    // Структуры для хранения информации о процессе и запуске
    setlocale(LC_ALL, "ru");
    PROCESS_INFORMATION pi;
    STARTUPINFO si;
    ZeroMemory(&si, sizeof(si));
    si.cb = sizeof(si);
    si.dwFlags |= STARTF_USESHOWWINDOW;
    si.wShowWindow = SW_SHOW;

    // Команда для выполнения дочернего процесса
    const char* command = "child_process.exe"; // Убедитесь, что этот исполняемый файл существует

    // Преобразуем строку в LPWSTR
    std::wstring wCommand = std::wstring(command, command + strlen(command)); // Исправленное преобразование

    // Создаем новый процесс
    if (!CreateProcess(
        NULL,               // Имя исполняемого файла
        (LPWSTR)wCommand.c_str(),     // Команда для выполнения
        NULL,               // Атрибуты процесса
        NULL,               // Атрибуты потока
        FALSE,              // Наследование дескрипторов
        0,                  // Стандартные флаги
        NULL,               // Стандартная среда
        NULL,               // Текущий каталог
        &si,                // Структура STARTUPINFO
        &pi)                // Структура PROCESS_INFORMATION
        ) {
        std::cerr << "Ошибка создания процесса: " << GetLastError() << std::endl;
        return 1;
    }

    // Ожидаем завершения дочернего процесса
    WaitForSingleObject(pi.hProcess, INFINITE);
    std::cout << "Дочерний процесс завершен." << std::endl;

    // Закрываем дескрипторы процесса и потока
    CloseHandle(pi.hProcess);
    CloseHandle(pi.hThread);

    return 0;
}
